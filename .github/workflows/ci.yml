name: Java CI with Gradle # Workflow 이름
run-name: Running
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main' # 수동 실행 트리거
  push:
    branches:
      - production
      - 'releases/**'

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: project-pappy-bucket
  AWS_CODE_DEPLOY_APPLICATION: pappy-deploy
  AWS_CODE_DEPLOY_GROUP: pappy-deploy-group

jobs:
  build-with-gradle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || 'production' }} # 수동 실행 시 입력된 브랜치로 이동, 기본값 production
      - name: JDK 17 설치
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: gradlew에 실행 권한 부여
        run: chmod +x ./gradlew
      - name: 프로젝트 빌드
        run: ./gradlew clean build -x test
      - name: AWS credential 설정
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: S3에 업로드
        run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://${{ env.AWS_S3_BUCKET }}/cicdtest/${{ github.sha }}.zip --source .

      - name: EC2에 배포
        run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=${{ env.AWS_S3_BUCKET }},key=cicdtest/${{ github.sha }}.zip,bundleType=zip